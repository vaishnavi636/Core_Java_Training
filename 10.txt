Project #10: Permutation 

package training;

public class Permutation {
	
	void printPermutations(int array[], int n)  
	{  
	     for (int i = 0; i < n; i++)  
		
	System.out.print(array[i] + " ");  
	//throws the cursor to the next line 
	
	System.out.println(); 
	}  
	
	//finds permutation using Heap Algorithm  
	void findPermutation(int array[], int size, int n)  
	{  
	// if size becomes 1, it prints the obtained permutation  
	if (size == 1)  
	printPermutations(array, n);  
	for (int i = 0; i < size; i++)   
	{  
	findPermutation(array, size - 1, n);  
	
	if (size % 2 == 1)   
	{  
	//performing swapping     
	int temp = array[0];  
	array[0] = array[size - 1];  
	array[size - 1] = temp;  
	}  
	
	else   
	{  
	//taking a temp variable for swapping     
	int temp;  
	//performing swapping   
	temp = array[i];  
	array[i] = array[size - 1];  
	array[size - 1] = temp;  
	}  
	}  
	}  
	//main() method  
	public static void main(String args[])  
	{  
	Permutation p = new Permutation();  
	//defining an array whose permutation is to find  
	int array[] = { 8, 2, 6 }; 
	int m = array.length;
	//calling the user-defined method  
	p.findPermutation(array, array.length, array.length); 
	
	int fact = 1;
	for(int j=1; j<=m; j++){    
		fact=fact*j;    
	  }    
	  System.out.println("Permutation is: "+fact);
	
	}  
	}  


OUTPUT:
8 2 6 
2 8 6 
6 8 2 
8 6 2 
2 6 8 
6 2 8 
Permutation is: 6
